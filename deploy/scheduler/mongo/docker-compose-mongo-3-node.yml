# MongoDB Replica Set with 3 nodes and admin users
x-healthcheck: &hc
  test: ["CMD-SHELL", "mongosh --quiet --eval 'db.hello().ok' || exit 1"]
  interval: 5s
  timeout: 3s
  retries: 30

networks:
  schenet:
    external: true

volumes:
  scheduler-mongo-data:
  scheduler-mongo-rep1-data:
  scheduler-mongo-rep2-data:

services:
  scheduler-mongo:
    image: mongo:8.0
    container_name: scheduler-mongo
    restart: unless-stopped
    env_file:
      - ../../env/mongo.env
    volumes:
      - scheduler-mongo-data:/data/db
      - ./mongo-keyfile:/opt/keyfile/mongo-keyfile
    ports:
      - "27017:27017"
    healthcheck: *hc
    command:
      [
        "mongod",
        "--replSet", "${MONGO_REPLICA_SET_NAME}",
        "--bind_ip", "localhost,scheduler-mongo",
        "--auth",
        "--keyFile", "/opt/keyfile/mongo-keyfile"
      ]
    deploy:
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 512m
    networks:
      schenet:
    
  scheduler-mongo-rep1:
    image: mongo:8.0
    container_name: scheduler-mongo-rep1
    restart: unless-stopped
    env_file:
      - ../../env/mongo.env
    volumes:
      - scheduler-mongo-rep1-data:/data/db
      - ./mongo-keyfile:/opt/keyfile/mongo-keyfile
    healthcheck: *hc
    command: 
      [
        "mongod",
        "--replSet", "${MONGO_REPLICA_SET_NAME}",
        "--bind_ip", "localhost,scheduler-mongo-rep1",
        "--auth",
        "--keyFile", "/opt/keyfile/mongo-keyfile"
      ]
    deploy:
      resources:
        limits:
          memory: 768m
        reservations:
          memory: 512m
    networks:
      schenet:

  scheduler-mongo-rep2:
    image: mongo:8.0
    container_name: scheduler-mongo-rep2
    restart: unless-stopped
    env_file:
      - ../../env/mongo.env
    volumes:
      - scheduler-mongo-rep2-data:/data/db
      - ./mongo-keyfile:/opt/keyfile/mongo-keyfile
    healthcheck: *hc
    command: 
      [
        "mongod",
        "--replSet", "${MONGO_REPLICA_SET_NAME}",
        "--bind_ip", "localhost,scheduler-mongo-rep2",
        "--auth",
        "--keyFile", "/opt/keyfile/mongo-keyfile"
      ]
    deploy:
      resources:
        limits:
          memory: 768m
        reservations:
          memory: 512m
    networks:
      schenet:

  scheduler-mongo-setup:
    image: mongo:8.0
    container_name: scheduler-mongo-setup
    depends_on:
      scheduler-mongo:
        condition: service_healthy
      scheduler-mongo-rep1:
        condition: service_healthy
      scheduler-mongo-rep2:
        condition: service_healthy
    env_file:
      - ../../env/mongo.env
    entrypoint: ["bash", "/scripts/mongo_setup.sh"]
    volumes:
      - ./mongo-setup.sh:/scripts/mongo_setup.sh:ro
    deploy:
      resources:
        limits:
          memory: 768m
        reservations:
          memory: 512m
    networks:
      schenet:

